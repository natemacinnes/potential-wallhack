
package libraryclient;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "LibraryServer", targetNamespace = "http://libraryserver/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface LibraryServer {


    /**
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "udpServer", targetNamespace = "http://libraryserver/", className = "libraryclient.UdpServer")
    @ResponseWrapper(localName = "udpServerResponse", targetNamespace = "http://libraryserver/", className = "libraryclient.UdpServerResponse")
    @Action(input = "http://libraryserver/LibraryServer/udpServerRequest", output = "http://libraryserver/LibraryServer/udpServerResponse")
    public String udpServer();

    /**
     * 
     * @param arg5
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @param arg6
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createAccount", targetNamespace = "http://libraryserver/", className = "libraryclient.CreateAccount")
    @ResponseWrapper(localName = "createAccountResponse", targetNamespace = "http://libraryserver/", className = "libraryclient.CreateAccountResponse")
    @Action(input = "http://libraryserver/LibraryServer/createAccountRequest", output = "http://libraryserver/LibraryServer/createAccountResponse")
    public String createAccount(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        String arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        String arg6);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "reserveBook", targetNamespace = "http://libraryserver/", className = "libraryclient.ReserveBook")
    @ResponseWrapper(localName = "reserveBookResponse", targetNamespace = "http://libraryserver/", className = "libraryclient.ReserveBookResponse")
    @Action(input = "http://libraryserver/LibraryServer/reserveBookRequest", output = "http://libraryserver/LibraryServer/reserveBookResponse")
    public String reserveBook(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg4
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "intitutionReserve", targetNamespace = "http://libraryserver/", className = "libraryclient.IntitutionReserve")
    @ResponseWrapper(localName = "intitutionReserveResponse", targetNamespace = "http://libraryserver/", className = "libraryclient.IntitutionReserveResponse")
    @Action(input = "http://libraryserver/LibraryServer/intitutionReserveRequest", output = "http://libraryserver/LibraryServer/intitutionReserveResponse")
    public String intitutionReserve(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        String arg4);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "reserveInterLibrary", targetNamespace = "http://libraryserver/", className = "libraryclient.ReserveInterLibrary")
    @ResponseWrapper(localName = "reserveInterLibraryResponse", targetNamespace = "http://libraryserver/", className = "libraryclient.ReserveInterLibraryResponse")
    @Action(input = "http://libraryserver/LibraryServer/reserveInterLibraryRequest", output = "http://libraryserver/LibraryServer/reserveInterLibraryResponse")
    public String reserveInterLibrary(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

    /**
     * 
     * @param arg3
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNonreturners", targetNamespace = "http://libraryserver/", className = "libraryclient.GetNonreturners")
    @ResponseWrapper(localName = "getNonreturnersResponse", targetNamespace = "http://libraryserver/", className = "libraryclient.GetNonreturnersResponse")
    @Action(input = "http://libraryserver/LibraryServer/getNonreturnersRequest", output = "http://libraryserver/LibraryServer/getNonreturnersResponse")
    public String getNonreturners(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        String arg3);

}
